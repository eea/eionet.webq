<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eionet</groupId>
    <artifactId>webq2</artifactId>
    <packaging>war</packaging>
    <version>2.0-SNAPSHOT</version>
    <name>Eionet WebQ</name>
    <url>http://webforms.eionet.europa.eu</url>

    <properties>
        <env>default</env>
        <spring.version>4.3.24.RELEASE</spring.version>
        <junit.version>4.12</junit.version>
        <jdk.version>1.8</jdk.version>
        <mysql.version>5.1.43</mysql.version>
        <jackson.version>2.10.3</jackson.version>
        <h2.version>1.3.172</h2.version>
        <slf4j.version>1.7.25</slf4j.version>
        <checkstyle.config.location>${basedir}/docs/checkstyle.xml</checkstyle.config.location>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-security.version>4.2.17.RELEASE</spring-security.version>
        <hibernate.version>4.2.4.Final</hibernate.version>
        <maven.resources.overwrite>true</maven.resources.overwrite>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HHmm</maven.build.timestamp.format>
    </properties>

    <repositories>
        <repository>
            <id>project-local</id>
            <name>project-local repository</name>
            <layout>default</layout>
            <url>file:///${basedir}/lib</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <!-- Database connectors -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>

        <!--Liquibase-->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>3.0.5</version>
        </dependency>

        <!-- Spring 4 dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-cas</artifactId>
            <version>${spring-security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--  AspectJ -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.8.9</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--Hibernate-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- JSR 303 with Hibernate Validator -->
<!--        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
        </dependency>-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.0.0.Final</version>
        </dependency>

        <!-- betterFORM -->
        <dependency>
            <groupId>de.betterform</groupId>
            <artifactId>betterform</artifactId>
            <version>5.0rc3</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpcomponents-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpcomponents-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>de.betterform</groupId>
            <artifactId>betterform-core</artifactId>
            <version>5.0rc3</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.5</version>
        </dependency>
        
<!--        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>-->

        <!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-el-api</artifactId>
            <version>8.5.20</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
            <version>8.5.20</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jsp-api</artifactId>
            <version>8.5.20</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-impl</artifactId>
            <version>1.2.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-spec</artifactId>
            <version>1.2.5</version>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>javax.servlet.jsp.jstl</groupId>-->
            <!--<artifactId>jstl-api</artifactId>-->
            <!--<version>1.2</version>-->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>javax.servlet</groupId>-->
                    <!--<artifactId>servlet-api</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        <!--</dependency>-->

        <!-- Tiles -->
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
            <version>3.0.8</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--Guava-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>24.1.1-jre</version>
        </dependency>

        <!--Logging-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!--Zip files operations-->
        <dependency>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>zt-zip</artifactId>
            <version>1.12</version>
            <type>jar</type>
        </dependency>
        <!--JSON-->
        <!-- TODO: replace maybe -->
        <dependency>
            <groupId>de.odysseus.staxon</groupId>
            <artifactId>staxon-gson</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- jackson 2 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-web</artifactId>
            <version>2.0.4</version>
            <exclusions>
                <exclusion>
                    <artifactId>net.sf.ehcache</artifactId>
                    <groupId>ehcache-core</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>1.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.4.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>webq2</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
	                <execution>
	                    <id>copy-local-properties</id>
	                    <phase>prepare-package</phase>
	                    <goals>
	                        <goal>run</goal>
	                    </goals>
	                    <configuration>
	                        <tasks>
	                            <copy file="${basedir}/${env}.properties"
	                                  toFile="${project.build.directory}/classes/env.properties" />
	                        </tasks>
	                    </configuration>
	                </execution>
	                <execution>
	                    <id>pre-test</id>
	                    <phase>process-test-resources</phase>
	                    <configuration>
	                        <tasks>
	                            <copy file="${basedir}/${env}.properties"
	                                  toFile="${project.build.directory}/test-classes/env.properties" />
	                        </tasks>
	                    </configuration>
	                    <goals>
	                        <goal>run</goal>
	                    </goals>
	                </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <linkXRef>false</linkXRef>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <minimumTokens>300</minimumTokens>
                    <targetJdk>${jdk.version}</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <configLocation>${checkstyle.config.location}</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <!-- Update database tables -->
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.0.5</version>
                <configuration>
                    <propertyFile>target/classes/liquibase.properties</propertyFile>
                    <changeLogFile>src/main/resources/eionet/webq/dao/changelog.xml</changeLogFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.10</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <complianceLevel>${jdk.version}</complianceLevel>
                    <showWeaveInfo>false</showWeaveInfo>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <reportFormat>xml</reportFormat>
                    <systemPropertyVariables>
                        <db.url>jdbc:h2:mem:xmlStorage;DB_CLOSE_DELAY=-1</db.url>
                        <db.driver>org.h2.Driver</db.driver>
                        <db.username>xml</db.username>
                        <db.password>storage</db.password>
                        <converters.api.url>http://converters-test</converters.api.url>
                        <user.file.expiration.hours>9</user.file.expiration.hours>
                        <cas.service>http://localhost:8080</cas.service>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- http port -->
                    <port>8080</port>
                    <!-- application path always starts with /-->
                    <path>/</path>
                    <!-- optional path to a context file -->
                    <!-- <contextFile>${tomcatContextXml}</contextFile> -->
			        <httpsPort>8443</httpsPort>
			        <keystoreFile>${basedir}/certificates/keystore.jks</keystoreFile>
			        <keystorePass>password</keystorePass>                    
                    <warSourceDirectory>${project.build.directory}</warSourceDirectory>
                    <!-- optional system propoerties you want to add -->
<!--                     <systemProperties> -->
<!--                         <java.io.tmpdir>${project.build.directory}</java.io.tmpdir> -->
<!--                         <db.url>jdbc:h2:mem:xmlStorage;DB_CLOSE_DELAY=-1</db.url> -->
<!--                         <db.driver>org.h2.Driver</db.driver> -->
<!--                         <db.username>xml</db.username> -->
<!--                         <db.password>storage</db.password> -->
<!--                         <cas.service>http://localhost:8080</cas.service> -->
<!--                         <converters.api.url>http://localhost:6080</converters.api.url> -->
<!--                         <user.file.expiration.hours>72</user.file.expiration.hours> -->
<!--                         <initial.admin.username>admin</initial.admin.username> -->
<!--                     </systemProperties> -->
                    <!-- if you want to use test dependencies rather than only runtime -->
                    <useTestClasspath>false</useTestClasspath>
                    <!-- optional if you want to add some extra directories into the classloader -->
                    <additionalClasspathDirs>
                        <additionalClasspathDir></additionalClasspathDir>
                    </additionalClasspathDirs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${h2.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.7</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- attached to Maven verify phase -->
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>eionet/webq/**/*.class</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.2.3</version>
            </plugin>

            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.9.1.2184</version>
            </plugin>
        </plugins>
    </build>

    <!-- The Docker Maven plugin is used to create docker image with the fat jar -->
    <profiles>
        <profile>
          <id>docker</id>
          <build>
            <plugins>
              <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.13.6</version>
                <configuration>
                  <verbose>false</verbose>
                  <logDate>default</logDate>
                  <autoPull>true</autoPull>
                  <images>
                    <image>
                      <alias>tomcat</alias>
                      <name>dockerrepo.eionet.europa.eu:5000/${project.groupId}/${project.artifactId}</name>
                      <build>
                        <from>tomcat:7.0.56-jre7</from>
                        <maintainer>Søren Roug &lt;soren.roug@eea.europa.eu&gt;</maintainer>
                        <tags>
                          <tag>latest</tag>
                          <tag>${project.version}</tag>
                          <tag>${maven.build.timestamp}</tag>
                        </tags>
                        <assembly>
                          <!-- <descriptor>assembly.xml</descriptor> -->
                          <descriptorRef>rootWar</descriptorRef>
                        </assembly>
                        <runCmds>
                          <run>rm -rf /usr/local/tomcat/conf/logging.properties /usr/local/tomcat/webapps/*</run>
                          <run>mv /maven/ROOT.war /usr/local/tomcat/webapps/ROOT.war</run>
                        </runCmds>
                        <optimise>true</optimise>

                        <!-- Expose ports -->
                        <ports>
                          <port>8080</port>
                          <port>8009</port>
                        </ports>
                        <!-- Default command for the build image -->
                        <!--<cmd>catalina.sh run</cmd> -->
                      </build>

                      <run>
                        <!-- Assign dynamically mapped ports to maven variables (which can be reused in integration tests) -->
                        <ports>
                          <port>tomcat.port:8080</port>
                        </ports>
                        <env>
                          <CATALINA_OPTS>-Djava.security.egd=file:/dev/./urandom -Ddb.driver=com.mysql.jdbc.Driver -Ddb.url=jdbc:mysql://webqdb/webq2?maxAllowedPacket=32212254720 -Ddb.username=itests -Ddb.password=password</CATALINA_OPTS>
                          <JAVA_OPTS>-Xmx3072m</JAVA_OPTS>
                        </env>
                        <wait>
                          <!-- Check for this URL to return a 200 return code .... -->
                          <url>http://${docker.host.address}:${tomcat.port}/</url>
                          <!-- ... but at max 60 seconds -->
                          <time>60000</time>
                        </wait>
                        <links>
                          <link>webqdb</link>
                        </links>
                        <log>
                          <prefix>TC</prefix>
                          <color>cyan</color>
                        </log>
                      </run>
                    </image>

                    <image>
                      <alias>webqdb</alias>
                      <name>mysql:5.5</name>
                      <run>
                        <ports>
                          <port>database.port:3306</port>
                        </ports>
                        <env>
                          <MYSQL_ROOT_PASSWORD>toor</MYSQL_ROOT_PASSWORD>
                          <MYSQL_DATABASE>webq2</MYSQL_DATABASE>
                          <MYSQL_USER>itests</MYSQL_USER>
                          <MYSQL_PASSWORD>password</MYSQL_PASSWORD>
                        </env>
                        <cmd>mysqld --max_allowed_packet=30M</cmd>
<!--
                        <wait>
                          <tcp>
			    <port>3306</port>
			  </tcp>
                          <time>6000</time>
                        </wait>
-->
                      </run>
                    </image>

                    <image>
                      <alias>frontend</alias>
                      <name>dockerrepo.eionet.europa.eu:5000/${project.groupId}/${project.artifactId}-frontend</name>
                      <build>
                        <from>httpd:2.4.18</from>
                        <maintainer>Søren Roug &lt;soren.roug@eea.europa.eu&gt;</maintainer>
                        <tags>
                          <tag>latest</tag>
                          <tag>${project.version}</tag>
                          <tag>${maven.build.timestamp}</tag>
                        </tags>
                        <assembly>
                          <descriptor>frontend-assembly.xml</descriptor>
                        </assembly>
                        <runCmds>
                          <run>mv /maven/entrypoint.sh /usr/local/bin/</run>
                          <run>chmod 755 /usr/local/bin/entrypoint.sh</run>
                        </runCmds>
                        <optimise>true</optimise>

                        <!-- Expose ports -->
                        <ports>
                          <port>80</port>
                          <port>443</port>
                        </ports>
                        <cmd>entrypoint.sh</cmd>
                      </build>
                      <run>
                        <ports>
                          <port>database.port:3306</port>
                        </ports>
                        <env>
                          <BACKENDS>${docker.host.address}</BACKENDS>
                        </env>
                      </run>
                    </image>
                  </images>
                </configuration>

                <executions>
                  <execution>
                    <id>start</id>
                    <phase>pre-integration-test</phase>
                    <goals>
                      <goal>build</goal>
                      <goal>start</goal>
                    </goals>
                  </execution>
                  <execution>
                    <id>stop</id>
                    <phase>post-integration-test</phase>
                    <goals>
                      <goal>stop</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>

              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                  <!-- properties for the integration tests -->
                  <!-- note that it is the Tomcat container that runs liquibase -->
                  <systemPropertyVariables>
                    <db.driver>com.mysql.jdbc.Driver</db.driver>
                    <db.url>jdbc:mysql://${docker.host.address}:${database.port}/webq2?maxAllowedPacket=32212254720</db.url>
                    <db.username>itests</db.username>
                    <db.password>password</db.password>
                  </systemPropertyVariables>
                </configuration>
                <executions>
                  <execution>
                    <goals>
                      <goal>integration-test</goal>
                      <goal>verify</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>

            </plugins>
          </build>
        </profile>
    </profiles>
</project>
