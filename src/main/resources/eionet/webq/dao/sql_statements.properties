#PROJECT FILES
insert.project.file=INSERT INTO project_file(project_id, title, file, xml_schema, description, user_name, active, main_form) \
  VALUES(?, ?, ?, ?, ?, ?, ?, ?)
select.file.by.id=SELECT * FROM project_file WHERE id=?
update.project.file=UPDATE project_file SET title=?, xml_schema=?, description=?, user_name=?, active=?, main_form=?, file=? \
   WHERE id=?
update.project.file.without.file=UPDATE project_file SET title=?, xml_schema=?, description=?, user_name=?, active=?, main_form=? \
   WHERE id=?
select.all.project.files=SELECT id, project_id, title, xml_schema, description, user_name, active, main_form, created, updated \
   FROM project_file WHERE project_id=?
delete.project.file=DELETE FROM project_file WHERE id=? AND project_id=?

#PROJECTS
select.all.projects=SELECT * FROM project_folder ORDER BY project_id
delete.project.by.project.id=DELETE FROM project_folder WHERE project_id=?
update.project=UPDATE project_folder SET project_id=?, description=? WHERE id=?
insert.project=INSERT INTO project_folder(project_id, description) VALUES(?, ?)
select.project.by.project.id=SELECT * FROM project_folder WHERE project_id=?

#USER XML FILES
insert.user.file=INSERT INTO user_xml(user_id, file_name, xml_schema, xml, file_size_in_bytes) VALUES(?, ?, ?, ?, ?)
select.user.file.content=SELECT file_name, xml FROM user_xml WHERE id = ? AND user_id = ?
update.user.file=UPDATE user_xml SET xml = ?, file_size_in_bytes = ?, updated = ? WHERE id = ? and user_id= ?
select.all.file.for.user=SELECT id, file_name AS name, xml_schema, file_size_in_bytes AS size_in_bytes, created, updated \
  FROM user_xml WHERE user_id = ? \
  ORDER BY updated DESC